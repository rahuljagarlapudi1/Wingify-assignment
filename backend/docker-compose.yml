version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mirror.gcr.io/library/mongo:7.0
    container_name: financial_analyzer_mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: "password123"
      MONGO_INITDB_DATABASE: financial_analyzer
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.adminCommand({ping:1})' | mongosh --quiet -u admin -p password123 --authenticationDatabase admin"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching & Job Queue
  redis:
    image: mirror.gcr.io/library/redis:7.2-alpine
    container_name: financial_analyzer_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h localhost ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financial_analyzer_backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      ENVIRONMENT: production
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/financial_analyzer?authSource=admin
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SERPER_API_KEY: ${SERPER_API_KEY}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_data:
  redis_data:
